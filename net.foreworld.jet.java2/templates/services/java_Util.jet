package net.foreworld.java.services;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

/**
 * Copyright(c) 2010 foreworld.net
 * 
 * @author huangxin (huangxin@foreworld.net)
 * @generated
 */
public class Util {

	/**
	 * 把文件读入byte数组
	 * 
	 * @param $filename
	 * @return
	 * @throws IOException
	 */
	static public byte[] readFile(String $filename) throws IOException {
		File __file = new File($filename);
		long __len = __file.length();
		byte __data[] = new byte[(int) __len];
		FileInputStream __is = new FileInputStream(__file);
		int __r = __is.read(__data);
		if (__r != __len)
			throw new IOException("Only read " + __r + " of " + __len + " for " + __file);
		__is.close();
		return __data;
	}

	/**
	 * 把byte数组写出到文件
	 * 
	 * @param $filename
	 * @param $data
	 * @throws IOException
	 */
	static public void writeFile(String $filename, byte $data[]) throws IOException {
		FileOutputStream __os = new FileOutputStream($filename);
		__os.write($data);
		__os.close();
	}

	/**
	 * 获取客户端真实IP 穿透代理
	 * 
	 * @param $request
	 * @return
	 */
	static public String getIpAddr(HttpServletRequest $request) {
		String __ip = $request.getHeader("x-forwarded-for");
		if (__ip == null || __ip.length() == 0 || "unknown".equalsIgnoreCase(__ip)) {
			__ip = $request.getRemoteAddr();
		} else {
			List<String> __ipList_3 = Arrays.asList(__ip.split(","));
			for (int __i_4 = 0, __j_4 = __ipList_3.size(); __i_4 < __j_4; __i_4++) {
				String __ip_4 = __ipList_3.get(__i_4);
				if (!("unknown".equalsIgnoreCase(__ip_4))) {
					__ip = __ip_4;
					break;
				}
			}
		}
		return __ip;
	}
}
