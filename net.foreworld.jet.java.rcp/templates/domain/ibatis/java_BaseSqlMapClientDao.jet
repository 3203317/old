package net.foreworld.java.domain.ibatis;

import com.ibatis.sqlmap.client.SqlMapClient;
import com.ibatis.sqlmap.client.SqlMapExecutor;
import com.ibatis.sqlmap.engine.execution.SqlExecutor;
import com.ibatis.sqlmap.engine.impl.ExtendedSqlMapClient;
import com.ibatis.sqlmap.engine.impl.SqlMapClientImpl;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.sql.DataSource;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import org.springframework.orm.ibatis.SqlMapClientCallback;
import org.springframework.orm.ibatis.SqlMapClientTemplate;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

import net.foreworld.java.domain.ConnSession;

/**
 * 
 * @author 	huangxin
 * @email  	huangxin@foreworld.net
 * @qq		3203317
 * @generated
 */
public abstract class BaseSqlMapClientDao extends SqlMapClientDaoSupport{

	private static final Log log = LogFactory.getLog(BaseSqlMapClientDao.class);
	private static Map cacheData = new HashMap();
	private String location = null;
	private SqlExecutor sqlExecutor;
	
	
	protected Object queryForObject(String $statementName, Object $parameterObject, ConnSession $session){
		SqlMapClientTemplate __sqlMapClientTemplate = getSqlMapClientTemplate();
		
		//((SqlMapClientImpl)__sqlMapClientTemplate.getSqlMapClient()).setConnSession(session);
		
		return __sqlMapClientTemplate.queryForObject($statementName, $parameterObject);
	}
	
	
}